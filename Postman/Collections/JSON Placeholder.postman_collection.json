{
	"info": {
		"_postman_id": "87d8fc82-e8ee-49c2-842b-9292eda1be65",
		"name": "JSON Placeholder",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25110911"
	},
	"item": [
		{
			"name": "Get posts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"should verify response status code\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"pm.test(\"should verify response status code\", () => {\r",
							"pm.expect(pm.response.code).to.eql(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Should verify response time\", () => {\r",
							"    //console.log(pm.response)\r",
							"    pm.expect(pm.response.responseTime).to.lessThan(120) \r",
							"})\r",
							"\r",
							"pm.test(\"should verify response status\", () => {\r",
							"    pm.expect(pm.response.status).to.eql(\"OK\")\r",
							"})\r",
							"\r",
							"pm.test(\"should verify post id\", () => {\r",
							"    const responseBody = pm.response.json();\r",
							"    pm.expect(responseBody[0].id).to.be.eql(1);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		},
		{
			"name": "New Request",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		},
		{
			"name": "Get Comments",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//console.log(pm.response.json())\r",
							"\r",
							"pm.test('Verify correctness of email', () => {\r",
							"pm.response.json().map(data => {\r",
							"pm.expect(data.email).to.include(\"@\")\r",
							"})})\r",
							"\r",
							"pm.test(\"Verify status\", () => {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200, 201])\r",
							"})\r",
							"\r",
							"pm.test(\"Verify header\", () => {\r",
							"pm.response.to.have.header(\"Server\")\r",
							"})\r",
							"\r",
							"pm.test(\"Header content correctness\", () => {\r",
							"pm.expect(pm.response.headers.get(\"Server\")).to.be.eql(\"cloudflare\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/comments?postId=86",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"comments"
					],
					"query": [
						{
							"key": "postId",
							"value": "86"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		},
		{
			"name": "New Request",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userId\": 86,\r\n    \"id\": 501,\r\n    \"title\": \"mój pierwszy post\",\r\n    \"body\": \"yekst pierwszego posta\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userId\": 7,\r\n    \"id\": 126,\r\n    \"title\": \"ut asperiores perspiciatis veniam ipsum rerum saepe\",\r\n    \"completed\": false\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/todos/126",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"todos",
						"126"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/todos/126",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"todos",
						"126"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		},
		{
			"name": "Post new post + collection variable",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": " {\r\n    \"userId\": \"{{Test_user}}\",\r\n    \"id\": \"{{Test_user}}\",\r\n    \"title\": \"{{Post_title}}\",\r\n    \"body\": \"bla bla bla\"\r\n  }"
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userId\": 1,\r\n    \"id\": 4,\r\n    \"title\": \"nowy tytuł\",\r\n    \"body\": \"ullam et saepe reiciendis voluptatem adipisci\\nsit amet autem assumenda provident rerum culpa\\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\\nquis sunt voluptatem rerum illo velit\"\r\n  }"
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts/4",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts",
						"4"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/photos/4",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"photos",
						"4"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create post1",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		},
		{
			"name": "Get_Photo1",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/photos/7",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"photos",
						"7"
					]
				}
			},
			"response": []
		},
		{
			"name": "Post_Comment",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"postId\": 101,\r\n    \"id\": 501,\r\n    \"name\": \"my training post\",\r\n    \"email\": \"Emma@joanny.ca\",\r\n    \"body\": \"my training post\"\r\n  }\r\n"
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Put post title",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userId\": 2,\r\n    \"id\": 13,\r\n    \"title\": \"changed title\",\r\n    \"body\": \"aut dicta possimus sint mollitia voluptas commodi quo doloremque\\niste corrupti reiciendis voluptatem eius rerum\\nsit cumque quod eligendi laborum minima\\nperferendis recusandae assumenda consectetur porro architecto ipsum ipsam\"\r\n    }"
				},
				"url": {
					"raw": "jsonplaceholder.typicode.com/posts/13",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts",
						"13"
					]
				}
			},
			"response": []
		},
		{
			"name": "tryout",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		},
		{
			"name": "Post new post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Collection Variable content\", () => {\r",
							"console.log(pm.collectionVariables.get(\"Post_title\"))\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userId\": 1,\r\n    \"id\": 102,\r\n    \"title\": \"{{Post_title}}\",\r\n    \"body\": \"another boring post\"\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update post body",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//console.log(responseBody)\r",
							"\r",
							"pm.test(\"Checking udated post ID\", () => {\r",
							"    pm.expect(pm.response.json().id).to.be.eql(1)\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"body\": \"updated body\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts/1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Post new user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check Response Body\", () => {\r",
							"    //console.log(pm.response.json())\r",
							"})\r",
							"\r",
							"pm.test(\"check email adress\", () => {\r",
							"    pm.expect(pm.response.json().email).to.be.eql(\"Sincere@april.biz\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 12,\r\n    \"name\": \"Leanne Graham\",\r\n    \"username\": \"Bret\",\r\n    \"email\": \"Sincere@april.biz\",\r\n    \"address\": {\r\n      \"street\": \"Kulas Light\",\r\n      \"suite\": \"Apt. 556\",\r\n      \"city\": \"Gwenborough\",\r\n      \"zipcode\": \"92998-3874\",\r\n      \"geo\": {\r\n        \"lat\": \"-37.3159\",\r\n        \"lng\": \"81.1496\"\r\n      }\r\n    },\r\n    \"phone\": \"1-770-736-8031 x56442\",\r\n    \"website\": \"hildegard.org\",\r\n    \"company\": {\r\n      \"name\": \"Romaguera-Crona\",\r\n      \"catchPhrase\": \"Multi-layered client-server neural-net\",\r\n      \"bs\": \"harness real-time e-markets\"\r\n    }\r\n  }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseURL}}/users",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "Post_title",
			"value": "my first post (Collection)",
			"type": "string"
		},
		{
			"key": "Test_user",
			"value": "10",
			"type": "string"
		},
		{
			"key": "UserID",
			"value": ""
		},
		{
			"key": "BaseURL",
			"value": "https://jsonplaceholder.typicode.com",
			"type": "string"
		}
	]
}